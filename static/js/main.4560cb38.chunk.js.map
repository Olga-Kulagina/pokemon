{"version":3,"sources":["api/api.ts","redux/pokemonReducer.ts","components/PokemonCard/PokemonCard.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","App.module.css"],"names":["pokemonAPI","axios","get","initialState","pokemon","isLoading","setIsLoading","type","PokemonCard","props","Meta","Card","hoverable","style","width","margin","textAlign","cover","alt","src","pokemonNumber","title","name","charAt","toUpperCase","slice","App","dispatch","useDispatch","useEffect","then","res","data","results","catch","err","console","log","finally","useSelector","state","className","s","pokemonList","map","p","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"iLAEaA,EAAa,WAElB,OAAOC,IAAMC,IAAI,uCCMnBC,EAAe,CACjBC,QAAS,GACTC,WAAW,GAkBFC,EAAe,SAACD,GAAD,MAAyB,CAACE,KAAM,iBAAkBF,c,0BCtBjEG,EAAc,SAACC,GAAiC,IACjDC,EAASC,IAATD,KACR,OACI,cAAC,IAAD,CACIE,WAAS,EACTC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,EAAGC,UAAW,UAC3CC,MAAO,qBAAKC,IAAI,UAAUC,IAAG,0GAAqGV,EAAMW,cAA3G,UAHjC,SAKI,cAACV,EAAD,CAAMW,MAAOZ,EAAMa,KAAKC,OAAO,GAAGC,cAAgBf,EAAMa,KAAKG,MAAM,Q,iBCiBhEC,MAzBf,WACI,IAAMC,EAAWC,cAEjBC,qBAAU,WACNF,GFqBoC,SAACA,GACzCA,EAASrB,GAAa,IACtBN,IACK8B,MAAK,SAACC,GACHJ,EARqC,CAACpB,KAAM,mBAAoBH,QAQxC2B,EAAIC,KAAKC,aAEpCC,OAAM,SAACC,GACJC,QAAQC,IAAIF,MAEfG,SAAQ,WACLX,EAASrB,GAAa,YE9B3B,CAACqB,IAEJ,IAAItB,EAAYkC,aAAuC,SAAAC,GAAK,OAAIA,EAAMpC,QAAQC,aAC1ED,EAAUmC,aAAmC,SAAAC,GAAK,OAAIA,EAAMpC,QAAQA,WAExE,OACI,qBAAKqC,UAAU,MAAf,SACKpC,EACG,cAAC,IAAD,IACE,qBAAKoC,UAAWC,IAAEC,YAAlB,SAEMvC,EAAQwC,KAAI,SAACC,EAAQC,GAAT,OAA2B,cAAC,EAAD,CAAyBxB,KAAMuB,EAAEvB,KACpBF,cAAe0B,EAAQ,GADlBA,WCVlEC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yBCLRO,EAAcC,YAAgB,CAChCpD,QJU0B,WAAoF,IAAnFoC,EAAkF,uDAAxDrC,EAAcsD,EAA0C,uCAC7G,OAAQA,EAAOlD,MACX,IAAK,mBACD,OAAO,2BAAIiC,GAAX,IAAkBpC,QAASqD,EAAOrD,UAEtC,IAAK,iBACD,OAAO,2BAAIoC,GAAX,IAAkBnC,UAAWoD,EAAOpD,YAExC,QACI,OAAOmC,MIhBNkB,EAAQC,YAAYJ,EAAaK,YAAgBC,MCA9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACI,cAAC,EAAD,QAGRO,SAASC,eAAe,SAM1BnB,K,mBCnBAoB,EAAOC,QAAU,CAAC,YAAc,4B","file":"static/js/main.4560cb38.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const pokemonAPI = {\r\n    getPokemon() {\r\n        return axios.get('https://pokeapi.co/api/v2/pokemon/')\r\n    }\r\n}","import {Dispatch} from 'redux';\r\nimport {pokemonAPI} from '../api/api';\r\n\r\ntype initialStateType = typeof initialState\r\n\r\ntype SetPokemonDataType = ReturnType<typeof setPokemonData>\r\ntype SetIsLoadingType = ReturnType<typeof setIsLoading>\r\n\r\ntype ActionsType = SetPokemonDataType | SetIsLoadingType\r\n\r\nconst initialState = {\r\n    pokemon: [],\r\n    isLoading: true\r\n}\r\n\r\nexport const pokemonReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_POKEMON_DATA': {\r\n            return {...state, pokemon: action.pokemon}\r\n        }\r\n        case 'SET_IS_LOADING': {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setPokemonData = (pokemon: any) => ({type: 'SET_POKEMON_DATA', pokemon } as const)\r\nexport const setIsLoading = (isLoading: boolean) => ({type: 'SET_IS_LOADING', isLoading }  as const)\r\n\r\n\r\nexport const getPokemonThunkCreator = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoading(true))\r\n    pokemonAPI.getPokemon()\r\n        .then((res) => {\r\n            dispatch(setPokemonData(res.data.results))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoading(false))\r\n        })\r\n}\r\n\r\n","import React from 'react';\r\nimport {Card} from 'antd';\r\n\r\ntype PokemonCardPropsType = {\r\n    name: string\r\n    pokemonNumber: number\r\n}\r\n\r\nexport const PokemonCard = (props: PokemonCardPropsType) => {\r\n    const { Meta } = Card;\r\n    return (\r\n        <Card\r\n            hoverable\r\n            style={{ width: 240, margin: 5, textAlign: 'center' }}\r\n            cover={<img alt=\"pokemon\" src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${props.pokemonNumber}.png`} />}\r\n        >\r\n            <Meta title={props.name.charAt(0).toUpperCase() + props.name.slice(1)} />\r\n        </Card>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getPokemonThunkCreator} from './redux/pokemonReducer';\nimport {AppRootStateType} from './redux/redux-store';\nimport {Spin} from 'antd';\nimport {PokemonCard} from './components/PokemonCard/PokemonCard';\nimport s from './App.module.css'\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getPokemonThunkCreator())\n    }, [dispatch])\n\n    let isLoading = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoading)\n    let pokemon = useSelector<AppRootStateType, any>(state => state.pokemon.pokemon)\n\n    return (\n        <div className=\"App\">\n            {isLoading ?\n                <Spin/>\n                : <div className={s.pokemonList}>\n                    {\n                        pokemon.map((p: any, index: number) => <PokemonCard key={index} name={p.name}\n                                                                            pokemonNumber={index + 1}/>)\n                    }\n                </div>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {pokemonReducer} from './pokemonReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    pokemon: pokemonReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\nimport {Provider} from 'react-redux';\nimport {store} from './redux/redux-store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonList\":\"App_pokemonList__kHsnt\"};"],"sourceRoot":""}