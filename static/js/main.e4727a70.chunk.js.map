{"version":3,"sources":["api/api.ts","redux/pokemonReducer.ts","components/PokemonPage/PokemonPage.tsx","components/Error404/Error404.tsx","components/PokemonCard/PokemonCard.tsx","components/AllPokemon/AllPokemon.tsx","components/Navigation/Navigation.tsx","components/PokemonList/PokemonListItem/PokemonListItem.tsx","components/PokemonList/PokemonList.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/AllPokemon/AllPokemon.module.css","components/PokemonList/PokemonListItem/PokemonListItem.module.css","components/PokemonList/PokemonList.module.css"],"names":["pokemonAPI","axios","get","id","initialState","pokemonList","displayPokemon","nextPage","previousPage","pokemonInfo","isLoadingApp","isLoadingPokemonPage","isLoadingPokemonList","setIsLoadingApp","type","setIsLoadingPokemonPage","setIsLoadingPokemonList","PokemonPage","console","log","dispatch","useDispatch","useParams","useEffect","then","res","data","catch","err","finally","setPokemonInfoThunkCreator","useSelector","state","pokemon","name","src","sprites","other","front_default","alt","height","weight","types","map","item","index","style","fontSize","padding","color","abilities","ability","percent","stats","base_stat","showInfo","Error404","PokemonCard","props","Meta","Card","to","hoverable","width","margin","textAlign","cover","onError","e","currentTarget","onerror","title","AllPokemon","className","s","p","Navigation","useState","current","setCurrent","marginBottom","mode","onClick","key","selectedKeys","Item","PATH","ALLPOKEMON","POKEMONlIST","PokemonListItem","pokemonListItem","PokemonList","POKEMONPAGE","App","pokeApiList","results","next","previous","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","charAt","toUpperCase","slice","Number","url","length","newName","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e4727a70.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nexport const pokemonAPI = {\r\n    getPokemon() {\r\n        return axios.get('https://pokeapi.co/api/v2/pokemon?limit=30&offset=0')\r\n    },\r\n    getPokemonList() {\r\n        return axios.get('https://pokeapi.co/api/v2/pokemon?limit=1200&offset=0')\r\n    },\r\n    getPokemonInfo(id: number) {\r\n        return axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n    }\r\n}\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {pokemonAPI} from '../api/api';\r\n\r\ntype initialStateType = typeof initialState\r\n\r\ntype SetPokemonDataType = ReturnType<typeof setPokemonData>\r\ntype SetDisplayPokemonType = ReturnType<typeof setDisplayPokemon>\r\ntype SetIsLoadingAppType = ReturnType<typeof setIsLoadingApp>\r\ntype SetIsLoadingPokemonPageType = ReturnType<typeof setIsLoadingPokemonPage>\r\ntype SetIsLoadingPokemonListType = ReturnType<typeof setIsLoadingPokemonList>\r\ntype SetPokemonInfoType = ReturnType<typeof setPokemonInfo>\r\ntype SetPagesType = ReturnType<typeof setPages>\r\n\r\ntype ActionsType =\r\n    SetPokemonDataType\r\n    | SetDisplayPokemonType\r\n    | SetIsLoadingAppType\r\n    | SetIsLoadingPokemonPageType\r\n    | SetIsLoadingPokemonListType\r\n    | SetPokemonInfoType\r\n    | SetPagesType\r\n\r\nexport type PokemonShortType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport type PokeApiShortType = {\r\n    name: string\r\n    url: string\r\n}\r\n\r\nconst initialState = {\r\n    pokemonList: [] as Array<PokemonShortType>,\r\n    displayPokemon: [] as Array<PokemonShortType>,\r\n    nextPage: '',\r\n    previousPage: '',\r\n    pokemonInfo: {},\r\n    isLoadingApp: true,\r\n    isLoadingPokemonPage: true,\r\n    isLoadingPokemonList: true\r\n}\r\n\r\nexport const pokemonReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_POKEMON_DATA': {\r\n            let pokemonList = action.pokeApiList.map((p: PokeApiShortType) => {\r\n                return {\r\n                    //Имя покемона с большой буквы, номер покемона для дальнейшего использования\r\n                    name: p.name.charAt(0).toUpperCase() + p.name.slice(1),\r\n                    id: Number(p.url.slice(34, p.url.length - 1)),\r\n                }\r\n            })\r\n            return {...state, pokemonList: pokemonList}\r\n        }\r\n        case 'SET_DISPLAY_POKEMON': {\r\n            let pokemonList = action.pokeApiList.map((p: PokeApiShortType) => {\r\n                return {\r\n                    //Имя покемона с большой буквы, номер покемона для дальнейшего использования\r\n                    name: p.name.charAt(0).toUpperCase() + p.name.slice(1),\r\n                    id: Number(p.url.slice(34, p.url.length - 1)),\r\n                }\r\n            })\r\n            return {...state, displayPokemon: pokemonList}\r\n        }\r\n        case 'SET_PAGES': {\r\n            return {...state, nextPage: action.next, previousPage: action.previous}\r\n        }\r\n        case 'SET_POKEMON_INFO': {\r\n            let newName = action.data.name.charAt(0).toUpperCase() + action.data.name.slice(1)\r\n            console.log(action.data)\r\n            return {...state, pokemonInfo: {...action.data, name: newName}}\r\n        }\r\n        case 'SET_IS_LOADING_APP': {\r\n            return {...state, isLoadingApp: action.isLoadingApp}\r\n        }\r\n        case 'SET_IS_LOADING_POKEMON_PAGE': {\r\n            return {...state, isLoadingPokemonPage: action.isLoadingPokemonPage}\r\n        }\r\n        case 'SET_IS_LOADING_POKEMON_LIST': {\r\n            return {...state, isLoadingPokemonList: action.isLoadingPokemonList}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setPokemonData = (pokeApiList: Array<PokeApiShortType>) => ({\r\n    type: 'SET_POKEMON_DATA',\r\n    pokeApiList\r\n} as const)\r\nexport const setDisplayPokemon = (pokeApiList: Array<PokeApiShortType>) => ({\r\n    type: 'SET_DISPLAY_POKEMON',\r\n    pokeApiList\r\n} as const)\r\nexport const setIsLoadingApp = (isLoadingApp: boolean) => ({type: 'SET_IS_LOADING_APP', isLoadingApp} as const)\r\nexport const setIsLoadingPokemonPage = (isLoadingPokemonPage: boolean) => ({\r\n    type: 'SET_IS_LOADING_POKEMON_PAGE',\r\n    isLoadingPokemonPage\r\n} as const)\r\nexport const setIsLoadingPokemonList = (isLoadingPokemonList: boolean) => ({\r\n    type: 'SET_IS_LOADING_POKEMON_LIST',\r\n    isLoadingPokemonList\r\n} as const)\r\nexport const setPokemonInfo = (data: any) => ({type: 'SET_POKEMON_INFO', data} as const)\r\nexport const setPages = (next: string, previous: string) => ({type: 'SET_PAGES', next, previous} as const)\r\n\r\nexport const getAllPokemonListThunkCreator = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingPokemonList(true))\r\n    pokemonAPI.getPokemonList()\r\n        .then((res) => {\r\n            console.log(res.data.results)\r\n            dispatch(setPokemonData(res.data.results))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoadingPokemonList(false))\r\n        })\r\n}\r\n\r\nexport const getPokemonThunkCreator = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingApp(true))\r\n    pokemonAPI.getPokemon()\r\n        .then((res) => {\r\n            console.log(res)\r\n            dispatch(setDisplayPokemon(res.data.results))\r\n            dispatch(setPages(res.data.next, res.data.previous))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoadingApp(false))\r\n        })\r\n}\r\n\r\nexport const setPokemonInfoThunkCreator = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingPokemonPage(true))\r\n    pokemonAPI.getPokemonInfo(id)\r\n        .then((res) => {\r\n            dispatch(setPokemonInfo(res.data))\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoadingPokemonPage(false))\r\n        })\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport {setPokemonInfoThunkCreator} from '../../redux/pokemonReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {Progress, Spin, Tag} from 'antd';\r\n\r\nexport const PokemonPage = () => {\r\n    console.log('PokemonPage render')\r\n    const dispatch = useDispatch()\r\n    //@ts-ignore\r\n    let {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPokemonInfoThunkCreator(id))\r\n    }, [dispatch, id])\r\n\r\n    let isLoadingPokemonPage = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoadingPokemonPage)\r\n    let pokemonInfo = useSelector<AppRootStateType, any>(state => state.pokemon.pokemonInfo)\r\n\r\n\r\n    return (\r\n        <div>\r\n            {isLoadingPokemonPage ?\r\n                <Spin/>\r\n                : <div>\r\n                    <h2>{pokemonInfo.name}</h2>\r\n                    <img src={pokemonInfo.sprites.other['official-artwork'].front_default} alt={pokemonInfo.name}/>\r\n                    <p>Height: {pokemonInfo.height / 10} m</p>\r\n                    <p>Weight: {pokemonInfo.weight / 10} kg</p>\r\n                    <p>Type: {pokemonInfo.types.map((item: any, index: number) => {\r\n                        switch(item.type.name) {\r\n                            case 'grass': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='green'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'poison': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='purple'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'water': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='geekblue'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'rock': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='volcano'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'ground': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='volcano'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'fire': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='red'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'psychic': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='magenta'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'flying': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='cyan'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'dark': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='black'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'normal': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='lime'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'bug': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='green'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'fairy': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='gold'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'electric': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='yellow'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'dragon': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='geekblue'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'ice': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='blue'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'fighting': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='red'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'steel': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='cyan'>{item.type.name}</Tag>\r\n                            }\r\n                            case 'ghost': {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='orange'>{item.type.name}</Tag>\r\n                            }\r\n                            default: {\r\n                                return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index} color='green'>{item.type.name}</Tag>\r\n                            }\r\n                        }\r\n                    })}</p>\r\n                    <p>Abilities: {pokemonInfo.abilities.map((item: any, index: number) => {\r\n                        return <span key={index}>{`${item.ability.name} `}</span>\r\n                    })}</p>\r\n                    <div>\r\n                        <p>Stats</p>\r\n                        HP <Progress percent={pokemonInfo.stats[0].base_stat / 2} showInfo={false}/>\r\n                        Attack <Progress percent={pokemonInfo.stats[1].base_stat / 2} showInfo={false}/>\r\n                        Defense <Progress percent={pokemonInfo.stats[2].base_stat / 2} showInfo={false}/>\r\n                        Special-attack <Progress percent={pokemonInfo.stats[3].base_stat / 2} showInfo={false}/>\r\n                        Special-defense <Progress percent={pokemonInfo.stats[4].base_stat / 2} showInfo={false}/>\r\n                        Speed <Progress percent={pokemonInfo.stats[5].base_stat / 2} showInfo={false}/>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div>\r\n            Error404\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Card} from 'antd';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\ntype PokemonCardPropsType = {\r\n    name: string\r\n    id: number\r\n\r\n}\r\n\r\nexport const PokemonCard = (props: PokemonCardPropsType) => {\r\n    const { Meta } = Card;\r\n\r\n    return (\r\n        <NavLink to={`/pokemon/${props.id}`}>\r\n            <Card\r\n                hoverable\r\n                style={{ width: 240, margin: 5, textAlign: 'center' }}\r\n                cover={<img alt={props.name} src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${props.id}.png`}\r\n                            onError={(e)=>{e.currentTarget.onerror = null; e.currentTarget.src=`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.id}.png`}}/>}\r\n            >\r\n                <Meta title={props.name} />\r\n            </Card>\r\n        </NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {PokemonShortType} from '../../redux/pokemonReducer';\r\nimport {Spin} from 'antd';\r\nimport {PokemonCard} from '../PokemonCard/PokemonCard';\r\nimport s from './AllPokemon.module.css'\r\n\r\nexport const AllPokemon = () => {\r\n\r\n\r\n    let isLoadingApp = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoadingApp)\r\n    let displayPokemon = useSelector<AppRootStateType, any>(state => state.pokemon.displayPokemon)\r\n\r\n    return (\r\n        <div>\r\n            {isLoadingApp ?\r\n                <Spin/>\r\n                : <div style={{textAlign: 'center'}}>\r\n                    <div className={s.pokemonList}>\r\n                        {\r\n                            displayPokemon.map((p: PokemonShortType) => <PokemonCard key={p.id} name={p.name}\r\n                                                                                  id={p.id}/>)\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","import {Menu} from 'antd';\r\nimport React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../App';\r\n\r\ntype NavigationPropsType = {\r\n}\r\n\r\nexport const Navigation = (props: NavigationPropsType) => {\r\n\r\n    let [current, setCurrent] = useState('')\r\n\r\n    let handleClick = (e: any) => {\r\n        setCurrent(e.key);\r\n    }\r\n\r\n    return (\r\n        <div style={{marginBottom: '10px'}}>\r\n            <Menu mode=\"horizontal\" onClick={handleClick} selectedKeys={[current]} style={{textAlign: 'center'}}>\r\n                <Menu.Item key=\"all\">\r\n                    <NavLink to={PATH.ALLPOKEMON}>Home</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"list\">\r\n                    <NavLink to={PATH.POKEMONlIST}>Pokemon list</NavLink>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './PokemonListItem.module.css'\r\n\r\ntype PokemonListItemPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport const PokemonListItem = (props: PokemonListItemPropsType) => {\r\n    return (\r\n\r\n        <div className={s.pokemonListItem}>\r\n            <NavLink to={`/pokemon/${props.id}`}><p>{props.id} {props.name}</p></NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {PokemonListItem} from './PokemonListItem/PokemonListItem';\r\nimport {Spin} from 'antd';\r\nimport {PokemonShortType} from '../../redux/pokemonReducer';\r\nimport s from './PokemonList.module.css'\r\n\r\nexport const PokemonList = () => {\r\n\r\n    let isLoadingPokemonList = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoadingPokemonList)\r\n    let pokemonList = useSelector<AppRootStateType, any>(state => state.pokemon.pokemonList)\r\n\r\n    return (\r\n        <div>\r\n            {isLoadingPokemonList ?\r\n                <Spin/>\r\n                : <div>\r\n                    <div className={s.pokemonList}>\r\n                        {\r\n                            pokemonList.map((p: PokemonShortType) => <PokemonListItem key={p.id} name={p.name}\r\n                                                                                      id={p.id}/>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport {PokemonPage} from './components/PokemonPage/PokemonPage';\nimport {Error404} from './components/Error404/Error404';\nimport {AllPokemon} from './components/AllPokemon/AllPokemon';\nimport {getAllPokemonListThunkCreator, getPokemonThunkCreator} from './redux/pokemonReducer';\nimport {useDispatch} from 'react-redux';\nimport {Navigation} from './components/Navigation/Navigation';\nimport {PokemonList} from './components/PokemonList/PokemonList';\n\nexport const PATH = {\n    ALLPOKEMON: \"/all\",\n    POKEMONPAGE: '/pokemon/:id',\n    POKEMONlIST: '/list'\n}\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getPokemonThunkCreator())\n        dispatch(getAllPokemonListThunkCreator())\n    }, [dispatch])\n\n    return (\n        <div className=\"App\">\n            <Navigation />\n            <Switch>\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.ALLPOKEMON}/>}/>\n\n                <Route path={PATH.ALLPOKEMON} render={() => <AllPokemon />}/>\n                <Route path={PATH.POKEMONlIST} render={() => <PokemonList />}/>\n                <Route path={PATH.POKEMONPAGE} render={() => <PokemonPage />}/>\n\n                <Route render={() => <Error404/>}/>\n            </Switch>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {pokemonReducer} from './pokemonReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    pokemon: pokemonReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\nimport {Provider} from 'react-redux';\nimport {store} from './redux/redux-store';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonList\":\"AllPokemon_pokemonList__3jWo9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonListItem\":\"PokemonListItem_pokemonListItem__jB0SB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonList\":\"PokemonList_pokemonList__b1Nol\"};"],"sourceRoot":""}