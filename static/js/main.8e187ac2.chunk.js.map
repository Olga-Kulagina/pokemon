{"version":3,"sources":["components/PokemonList/PokemonListItem/PokemonListItem.module.css","api/api.ts","redux/pokemonReducer.ts","components/PokemonPage/PokemonPage.tsx","components/Error404/Error404.tsx","components/PokemonCard/PokemonCard.tsx","components/Paginator/Paginator.tsx","components/AllPokemon/AllPokemon.tsx","components/Navigation/Navigation.tsx","components/PokemonList/PokemonListItem/PokemonListItem.tsx","components/PokemonList/PokemonList.tsx","App.tsx","reportWebVitals.ts","redux/redux-store.ts","index.tsx","components/AllPokemon/AllPokemon.module.css","components/PokemonList/PokemonList.module.css","components/PokemonPage/PokemonPage.module.css"],"names":["module","exports","pokemonAPI","pageNumber","axios","get","id","initialState","pokemonList","displayPokemon","totalPokemon","pokemonInfo","isLoadingDisplayPokemon","isLoadingPokemonPage","isLoadingPokemonList","someError","setIsLoadingDisplayPokemon","type","setIsLoadingPokemonPage","setIsLoadingPokemonList","setSomeError","error","PokemonPage","dispatch","useDispatch","useParams","useEffect","then","res","data","catch","err","finally","setPokemonInfoThunkCreator","useSelector","state","pokemon","className","s","spin","name","pictureAndInfo","picture","src","sprites","other","front_default","alt","info","infoStatsHeader","infoRow","characteristic","height","weight","types","map","item","index","style","fontSize","padding","color","abilitiesFlex","abilities","ability","base_experience","progressBlock","progress","progressLabel","progressBar","percent","stats","base_stat","showInfo","navigation","to","disabled","Error404","status","title","subTitle","extra","PATH","ALLPOKEMON","PokemonCard","props","Meta","Card","hoverable","width","margin","textAlign","cover","onError","e","currentTarget","onerror","Paginator","onChange","setPageNumber","current","total","defaultPageSize","showQuickJumper","showSizeChanger","responsive","AllPokemon","p","Navigation","useState","setCurrent","marginBottom","mode","onClick","key","selectedKeys","Item","POKEMONlIST","PokemonListItem","pokemonListItem","PokemonList","POKEMONPAGE","App","pokeApiList","results","getPokemonThunkCreator","count","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","charAt","toUpperCase","slice","Number","url","length","newName","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e187ac2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonListItem\":\"PokemonListItem_pokemonListItem__jB0SB\"};","import axios from 'axios'\r\n\r\nexport const pokemonAPI = {\r\n    getPokemon(pageNumber: number) {\r\n        return axios.get(`https://pokeapi.co/api/v2/pokemon?limit=30&offset=${(pageNumber - 1) * 30}`)\r\n    },\r\n    getPokemonList() {\r\n        return axios.get('https://pokeapi.co/api/v2/pokemon?limit=1200&offset=0')\r\n    },\r\n    getPokemonInfo(id: number) {\r\n        return axios.get(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n    },\r\n    getEvolutionChain(url: string) {\r\n        return axios.get(url)\r\n    }\r\n}\r\n\r\n","import {Dispatch} from 'redux';\r\nimport {pokemonAPI} from '../api/api';\r\n\r\ntype initialStateType = typeof initialState\r\n\r\ntype SetPokemonDataType = ReturnType<typeof setPokemonData>\r\ntype SetDisplayPokemonType = ReturnType<typeof setDisplayPokemon>\r\ntype SetIsLoadingDisplayPokemonType = ReturnType<typeof setIsLoadingDisplayPokemon>\r\ntype SetIsLoadingPokemonPageType = ReturnType<typeof setIsLoadingPokemonPage>\r\ntype SetIsLoadingPokemonListType = ReturnType<typeof setIsLoadingPokemonList>\r\ntype SetPokemonInfoType = ReturnType<typeof setPokemonInfo>\r\ntype SetPageNumberType = ReturnType<typeof setPageNumber>\r\ntype SetTotalPokemonType = ReturnType<typeof setTotalPokemon>\r\ntype SetSomeErrorType = ReturnType<typeof setSomeError>\r\n\r\ntype ActionsType =\r\n    SetPokemonDataType\r\n    | SetDisplayPokemonType\r\n    | SetIsLoadingDisplayPokemonType\r\n    | SetIsLoadingPokemonPageType\r\n    | SetIsLoadingPokemonListType\r\n    | SetPokemonInfoType\r\n    | SetPageNumberType\r\n    | SetTotalPokemonType\r\n    | SetSomeErrorType\r\n\r\nexport type PokemonShortType = {\r\n    name: string\r\n    id: number\r\n}\r\nexport type PokeApiShortType = {\r\n    name: string\r\n    url: string\r\n}\r\n\r\nconst initialState = {\r\n    pokemonList: [] as Array<PokemonShortType>,\r\n    displayPokemon: [] as Array<PokemonShortType>,\r\n    pageNumber: 1,\r\n    totalPokemon: 0,\r\n    pokemonInfo: {},\r\n    isLoadingDisplayPokemon: true,\r\n    isLoadingPokemonPage: true,\r\n    isLoadingPokemonList: true,\r\n    someError: false\r\n}\r\n\r\nexport const pokemonReducer = (state: initialStateType = initialState, action: ActionsType): initialStateType => {\r\n    switch (action.type) {\r\n        case 'SET_POKEMON_DATA': {\r\n            let pokemonList = action.pokeApiList.map((p: PokeApiShortType) => {\r\n                return {\r\n                    //Имя покемона с большой буквы, номер покемона для дальнейшего использования\r\n                    name: p.name.charAt(0).toUpperCase() + p.name.slice(1),\r\n                    id: Number(p.url.slice(34, p.url.length - 1)),\r\n                }\r\n            })\r\n            return {...state, pokemonList: pokemonList}\r\n        }\r\n        case 'SET_DISPLAY_POKEMON': {\r\n            let pokemonList = action.pokeApiList.map((p: PokeApiShortType) => {\r\n                return {\r\n                    //Имя покемона с большой буквы, номер покемона для дальнейшего использования\r\n                    name: p.name.charAt(0).toUpperCase() + p.name.slice(1),\r\n                    id: Number(p.url.slice(34, p.url.length - 1)),\r\n                }\r\n            })\r\n            return {...state, displayPokemon: pokemonList}\r\n        }\r\n        case 'SET_PAGE_NUMBER': {\r\n            return {...state, pageNumber: action.pageNumber}\r\n        }\r\n        case 'SET_POKEMON_INFO': {\r\n            let newName = action.data.name.charAt(0).toUpperCase() + action.data.name.slice(1)\r\n            return {...state, pokemonInfo: {...action.data, name: newName}}\r\n        }\r\n        case 'SET_IS_LOADING_DISPLAY_POKEMON': {\r\n            return {...state, isLoadingDisplayPokemon: action.isLoadingDisplayPokemon}\r\n        }\r\n        case 'SET_IS_LOADING_POKEMON_PAGE': {\r\n            return {...state, isLoadingPokemonPage: action.isLoadingPokemonPage}\r\n        }\r\n        case 'SET_IS_LOADING_POKEMON_LIST': {\r\n            return {...state, isLoadingPokemonList: action.isLoadingPokemonList}\r\n        }\r\n        case 'SET_TOTAL_POKEMON': {\r\n            return {...state, totalPokemon: action.total}\r\n        }\r\n        case 'SET_SOME_ERROR': {\r\n            return {...state, someError: action.error}\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const setPokemonData = (pokeApiList: Array<PokeApiShortType>) => ({\r\n    type: 'SET_POKEMON_DATA',\r\n    pokeApiList\r\n} as const)\r\nexport const setDisplayPokemon = (pokeApiList: Array<PokeApiShortType>) => ({\r\n    type: 'SET_DISPLAY_POKEMON',\r\n    pokeApiList\r\n} as const)\r\nexport const setIsLoadingDisplayPokemon = (isLoadingDisplayPokemon: boolean) => ({\r\n    type: 'SET_IS_LOADING_DISPLAY_POKEMON',\r\n    isLoadingDisplayPokemon\r\n} as const)\r\nexport const setIsLoadingPokemonPage = (isLoadingPokemonPage: boolean) => ({\r\n    type: 'SET_IS_LOADING_POKEMON_PAGE',\r\n    isLoadingPokemonPage\r\n} as const)\r\nexport const setIsLoadingPokemonList = (isLoadingPokemonList: boolean) => ({\r\n    type: 'SET_IS_LOADING_POKEMON_LIST',\r\n    isLoadingPokemonList\r\n} as const)\r\nexport const setPokemonInfo = (data: any) => ({type: 'SET_POKEMON_INFO', data} as const)\r\nexport const setPageNumber = (pageNumber: number) => ({type: 'SET_PAGE_NUMBER', pageNumber} as const)\r\nexport const setTotalPokemon = (total: number) => ({type: 'SET_TOTAL_POKEMON', total} as const)\r\nexport const setSomeError = (error: boolean) => {\r\n    return {type: 'SET_SOME_ERROR', error} as const\r\n}\r\n\r\nexport const getAllPokemonListThunkCreator = () => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingPokemonList(true))\r\n    pokemonAPI.getPokemonList()\r\n        .then((res) => {\r\n            dispatch(setPokemonData(res.data.results))\r\n            dispatch(setTotalPokemon(res.data.count))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(setSomeError(true))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoadingPokemonList(false))\r\n        })\r\n}\r\n\r\nexport const getPokemonThunkCreator = (pageNumber: number) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingDisplayPokemon(true))\r\n    pokemonAPI.getPokemon(pageNumber)\r\n        .then((res) => {\r\n            dispatch(setDisplayPokemon(res.data.results))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(setSomeError(true))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoadingDisplayPokemon(false))\r\n        })\r\n}\r\n\r\nexport const setPokemonInfoThunkCreator = (id: number) => (dispatch: Dispatch) => {\r\n    dispatch(setIsLoadingPokemonPage(true))\r\n    pokemonAPI.getPokemonInfo(id)\r\n        .then((res) => {\r\n            dispatch(setPokemonInfo(res.data))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(setSomeError(true))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setIsLoadingPokemonPage(false))\r\n        })\r\n}\r\n\r\n\r\n","import React, {useEffect} from 'react';\r\nimport {NavLink, useParams} from 'react-router-dom';\r\nimport {setPokemonInfoThunkCreator} from '../../redux/pokemonReducer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {Button, Progress, Spin, Tag} from 'antd';\r\nimport s from './PokemonPage.module.css'\r\n\r\nexport const PokemonPage = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    //@ts-ignore\r\n    let {id} = useParams()\r\n\r\n    useEffect(() => {\r\n        dispatch(setPokemonInfoThunkCreator(id))\r\n    }, [dispatch, id])\r\n\r\n    let isLoadingPokemonPage = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoadingPokemonPage)\r\n    let pokemonInfo = useSelector<AppRootStateType, any>(state => state.pokemon.pokemonInfo)\r\n\r\n    return (\r\n        <>\r\n            {isLoadingPokemonPage ?\r\n                <div className={s.spin}><Spin/></div>\r\n                : <div>\r\n                    <h2 className={s.name}>{pokemonInfo.name} № {pokemonInfo.id}</h2>\r\n                    <div className={s.pictureAndInfo}>\r\n                        <div className={s.picture}>\r\n                            <img src={pokemonInfo.sprites.other['official-artwork'].front_default}\r\n                                 alt={pokemonInfo.name}/>\r\n                        </div>\r\n                        <div className={s.info}>\r\n                            <h3 className={s.infoStatsHeader}>Info</h3>\r\n                            <p className={s.infoRow}>\r\n                                <span className={s.characteristic}>Height: </span>\r\n                                {pokemonInfo.height / 10} m\r\n                            </p>\r\n                            <p className={s.infoRow}>\r\n                                <span className={s.characteristic}>Weight: </span>\r\n                                {pokemonInfo.weight / 10} kg\r\n                            </p>\r\n                            <p className={s.infoRow}>\r\n                                <span className={s.characteristic}>Type: </span>\r\n                                {pokemonInfo.types.map((item: any, index: number) => {\r\n                                switch (item.type.name) {\r\n                                    case 'grass': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='green'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'poison': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='purple'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'water': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='geekblue'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'rock': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='volcano'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'ground': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '5px 10px'}} key={index}\r\n                                                    color='volcano'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'fire': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='red'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'psychic': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='magenta'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'flying': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='cyan'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'dark': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='black'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'normal': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='lime'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'bug': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='green'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'fairy': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='gold'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'electric': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='yellow'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'dragon': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='geekblue'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'ice': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='blue'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'fighting': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='red'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'steel': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='cyan'>{item.type.name}</Tag>\r\n                                    }\r\n                                    case 'ghost': {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='orange'>{item.type.name}</Tag>\r\n                                    }\r\n                                    default: {\r\n                                        return <Tag style={{fontSize: '14px', padding: '3px 8px'}} key={index}\r\n                                                    color='green'>{item.type.name}</Tag>\r\n                                    }\r\n                                }\r\n                            })}\r\n                            </p>\r\n                            <p className={s.infoRow}>\r\n                                <span className={s.characteristic}>Abilities: </span>\r\n                                <span className={s.abilitiesFlex}>\r\n                                    {pokemonInfo.abilities.map((item: any, index: number) => {\r\n                                        return <span className={s.abilities} key={index}>{`${item.ability.name} `}</span>\r\n                                    })}\r\n                                </span>\r\n                            </p>\r\n                            <p className={s.infoRow}>\r\n                                <span\r\n                                    className={s.characteristic}>Base Experience: </span>\r\n                                {pokemonInfo.base_experience}\r\n                            </p>\r\n                            <div>\r\n                                <h3 className={s.infoStatsHeader}>Stats</h3>\r\n                                <div className={s.progressBlock}>\r\n                                    <div className={s.progress}>\r\n                                        <span className={s.progressLabel}>HP</span>\r\n                                        <span className={s.progressBar}>\r\n                                    <Progress percent={pokemonInfo.stats[0].base_stat / 2} showInfo={false}/>\r\n                                </span>\r\n                                    </div>\r\n                                    <div className={s.progress}>\r\n                                        <span className={s.progressLabel}>Attack</span>\r\n                                        <span className={s.progressBar}>\r\n                                    <Progress percent={pokemonInfo.stats[1].base_stat / 2} showInfo={false}/>\r\n                                </span>\r\n                                    </div>\r\n                                    <div className={s.progress}>\r\n                                        <span className={s.progressLabel}>Defense</span>\r\n                                        <span className={s.progressBar}>\r\n                                    <Progress percent={pokemonInfo.stats[2].base_stat / 2} showInfo={false}/>\r\n                                </span>\r\n                                    </div>\r\n                                    <div className={s.progress}>\r\n                                        <span className={s.progressLabel}>Special attack</span>\r\n                                        <span className={s.progressBar}>\r\n                                    <Progress percent={pokemonInfo.stats[3].base_stat / 2} showInfo={false}/>\r\n                                </span>\r\n                                    </div>\r\n                                    <div className={s.progress}>\r\n                                        <span className={s.progressLabel}>Special defense</span>\r\n                                        <span className={s.progressBar}>\r\n                                    <Progress percent={pokemonInfo.stats[4].base_stat / 2} showInfo={false}/>\r\n                                </span>\r\n                                    </div>\r\n                                    <div className={s.progress}>\r\n                                        <span className={s.progressLabel}>Speed</span>\r\n                                        <span className={s.progressBar}>\r\n                                    <Progress percent={pokemonInfo.stats[5].base_stat / 2} showInfo={false}/>\r\n                                </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.navigation}>\r\n                        <NavLink to={`/pokemon/${pokemonInfo.id === 10001 ? 898 : pokemonInfo.id - 1}`}>\r\n                            <Button disabled={pokemonInfo.id === 1}>Prev</Button>\r\n                        </NavLink>\r\n                        <NavLink to={`/pokemon/${pokemonInfo.id === 898 ? 10001 : pokemonInfo.id + 1}`}>\r\n                            <Button disabled={pokemonInfo.id === 10220}>Next</Button>\r\n                        </NavLink>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport {Button, Result} from 'antd';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../App';\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"404\"\r\n                subTitle=\"Sorry, the page you visited does not exist.\"\r\n                extra={<NavLink to={PATH.ALLPOKEMON}><Button type=\"primary\">Home</Button></NavLink>}\r\n            />\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {Card} from 'antd';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype PokemonCardPropsType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const PokemonCard = (props: PokemonCardPropsType) => {\r\n    const {Meta} = Card;\r\n\r\n    return (\r\n        <NavLink to={`/pokemon/${props.id}`}>\r\n            <Card\r\n                hoverable\r\n                style={{width: 240, margin: 5, textAlign: 'center'}}\r\n                cover={<img alt={props.name}\r\n                            src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${props.id}.png`}\r\n                            // Если нет красивой картинки, грузится маленькая\r\n                            onError={(e) => {\r\n                                e.currentTarget.onerror = null;\r\n                                e.currentTarget.src = `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${props.id}.png`\r\n                            }}/>}\r\n            >\r\n                <Meta title={props.name}/>\r\n            </Card>\r\n        </NavLink>\r\n    )\r\n}","import React from 'react';\r\nimport {Pagination} from 'antd';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {setPageNumber} from '../../redux/pokemonReducer';\r\n\r\n\r\nexport const Paginator = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    let totalPokemon = useSelector<AppRootStateType, number>(state => state.pokemon.totalPokemon)\r\n    let pageNumber = useSelector<AppRootStateType, number>(state => state.pokemon.pageNumber)\r\n\r\n    let onChange = (pageNumber: number) => {\r\n        dispatch(setPageNumber(pageNumber))\r\n    }\r\n\r\n    return (\r\n        <div style={{padding: '10px'}}>\r\n            <Pagination onChange={onChange} current={pageNumber} total={totalPokemon} defaultPageSize={30}\r\n                        showQuickJumper showSizeChanger={false} responsive/>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {PokemonShortType} from '../../redux/pokemonReducer';\r\nimport {Spin} from 'antd';\r\nimport {PokemonCard} from '../PokemonCard/PokemonCard';\r\nimport s from './AllPokemon.module.css'\r\nimport {Paginator} from '../Paginator/Paginator';\r\n\r\nexport const AllPokemon = () => {\r\n\r\n    let isLoadingDisplayPokemon = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoadingDisplayPokemon)\r\n    let displayPokemon = useSelector<AppRootStateType, any>(state => state.pokemon.displayPokemon)\r\n\r\n    return (\r\n        <>\r\n            {isLoadingDisplayPokemon ?\r\n                <div className={s.spin}><Spin/></div>\r\n                : <div style={{textAlign: 'center'}}>\r\n                    <h1>Pokédex</h1>\r\n                    <div className={s.pokemonList}>\r\n                        {\r\n                            displayPokemon.map((p: PokemonShortType) => <PokemonCard key={p.id} name={p.name}\r\n                                                                                     id={p.id}/>)\r\n                        }\r\n                    </div>\r\n                    <Paginator />\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import {Menu} from 'antd';\r\nimport React, {useState} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {PATH} from '../../App';\r\n\r\ntype NavigationPropsType = {\r\n}\r\n\r\nexport const Navigation = (props: NavigationPropsType) => {\r\n\r\n    let [current, setCurrent] = useState('')\r\n\r\n    let handleClick = (e: any) => {\r\n        setCurrent(e.key);\r\n    }\r\n\r\n    return (\r\n        <div style={{marginBottom: '10px'}}>\r\n            <Menu mode=\"horizontal\" onClick={handleClick} selectedKeys={[current]} style={{textAlign: 'center'}}>\r\n                <Menu.Item key=\"all\">\r\n                    <NavLink to={PATH.ALLPOKEMON}>Home</NavLink>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"list\">\r\n                    <NavLink to={PATH.POKEMONlIST}>Pokemon list</NavLink>\r\n                </Menu.Item>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './PokemonListItem.module.css'\r\n\r\ntype PokemonListItemPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nexport const PokemonListItem = (props: PokemonListItemPropsType) => {\r\n    return (\r\n\r\n        <div className={s.pokemonListItem}>\r\n            <NavLink to={`/pokemon/${props.id}`}><p>{props.id} {props.name}</p></NavLink>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../redux/redux-store';\r\nimport {PokemonListItem} from './PokemonListItem/PokemonListItem';\r\nimport {Spin} from 'antd';\r\nimport {PokemonShortType} from '../../redux/pokemonReducer';\r\nimport s from './PokemonList.module.css'\r\n\r\nexport const PokemonList = () => {\r\n\r\n    let isLoadingPokemonList = useSelector<AppRootStateType, boolean>(state => state.pokemon.isLoadingPokemonList)\r\n    let pokemonList = useSelector<AppRootStateType, Array<PokemonShortType>>(state => state.pokemon.pokemonList)\r\n\r\n    return (\r\n        <>\r\n            {isLoadingPokemonList ?\r\n                <div className={s.spin}><Spin/></div>\r\n                : <div>\r\n                    <div className={s.pokemonList}>\r\n                        {\r\n                            pokemonList.map((p: PokemonShortType) => <PokemonListItem key={p.id} name={p.name}\r\n                                                                                      id={p.id}/>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            }\r\n\r\n        </>\r\n    )\r\n}","import React, {useEffect} from 'react';\nimport {Redirect, Route, Switch } from 'react-router-dom';\nimport {PokemonPage} from './components/PokemonPage/PokemonPage';\nimport {Error404} from './components/Error404/Error404';\nimport {AllPokemon} from './components/AllPokemon/AllPokemon';\nimport {getAllPokemonListThunkCreator, getPokemonThunkCreator} from './redux/pokemonReducer';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Navigation} from './components/Navigation/Navigation';\nimport {PokemonList} from './components/PokemonList/PokemonList';\nimport {AppRootStateType} from './redux/redux-store';\nimport {Result} from 'antd';\n\nexport const PATH = {\n    ALLPOKEMON: \"/all\",\n    POKEMONPAGE: '/pokemon/:id',\n    POKEMONlIST: '/list'\n}\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    let pageNumber = useSelector<AppRootStateType, number>(state => state.pokemon.pageNumber)\n    let someError = useSelector<AppRootStateType, boolean>(state => state.pokemon.someError)\n\n    useEffect(() => {\n        dispatch(getPokemonThunkCreator(pageNumber))\n    }, [dispatch, pageNumber])\n\n    useEffect(() => {\n        dispatch(getAllPokemonListThunkCreator())\n    }, [dispatch])\n\n    return (\n        <div className=\"App\">\n            <Navigation />\n            {someError ?\n                <Result\n                    status=\"500\"\n                    subTitle=\"Sorry, something went wrong.\"\n                /> :\n                <Switch>\n                    <Route path={\"/\"} exact render={() => <Redirect to={PATH.ALLPOKEMON}/>}/>\n\n                    <Route path={PATH.ALLPOKEMON} render={() => <AllPokemon />}/>\n                    <Route path={PATH.POKEMONlIST} render={() => <PokemonList />}/>\n                    <Route path={PATH.POKEMONPAGE} render={() => <PokemonPage />}/>\n\n                    <Route render={() => <Error404/>}/>\n                </Switch>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport {pokemonReducer} from './pokemonReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst rootReducer = combineReducers({\r\n    pokemon: pokemonReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\nimport {Provider} from 'react-redux';\nimport {store} from './redux/redux-store';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <App/>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokemonList\":\"AllPokemon_pokemonList__3jWo9\",\"spin\":\"AllPokemon_spin__1F1n_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin\":\"PokemonList_spin__3NTYf\",\"pokemonList\":\"PokemonList_pokemonList__b1Nol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin\":\"PokemonPage_spin__1xyi_\",\"name\":\"PokemonPage_name__2Fe6N\",\"pictureAndInfo\":\"PokemonPage_pictureAndInfo__3l2MG\",\"picture\":\"PokemonPage_picture__qsFc2\",\"info\":\"PokemonPage_info__bjxle\",\"infoRow\":\"PokemonPage_infoRow__3UCbF\",\"characteristic\":\"PokemonPage_characteristic__RMMk3\",\"abilitiesFlex\":\"PokemonPage_abilitiesFlex__1tTxD\",\"abilities\":\"PokemonPage_abilities__W7eCD\",\"infoStatsHeader\":\"PokemonPage_infoStatsHeader__3S4hx\",\"progressBlock\":\"PokemonPage_progressBlock__9qG2g\",\"progress\":\"PokemonPage_progress__FlshE\",\"progressLabel\":\"PokemonPage_progressLabel__3tXAJ\",\"progressBar\":\"PokemonPage_progressBar__39Rji\",\"navigation\":\"PokemonPage_navigation__2rer3\"};"],"sourceRoot":""}